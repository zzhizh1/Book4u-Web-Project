{"ast":null,"code":"var _jsxFileName = \"/Users/miabb/Desktop/database/hw2/Archive/client/src/components/SignIn.js\";\nimport PageNavbar from './PageNavbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../style/SignIn.css';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    this.owners = [{\n      name: \"demo\",\n      pwd: \"123456\"\n    }, {\n      name: \"oliver\",\n      pwd: \"123456\"\n    }];\n    const eventsArr = [//按钮点击事件\n    \"onLogin\", //user name输入改变\n    \"onChangeName\", //password输入改变\n    \"onChangePwd\", \"onSignUp\"]; //一次性绑定所有事件，这样以后添加的事件只要添加到eventArr数组里面就好了\n\n    eventsArr.map(ev => {\n      this[ev] = this[ev].bind(this);\n      return \"\";\n    });\n  }\n\n  onChangeName(e) {\n    this.setState({\n      username: e.target.value\n    });\n    this.setState({\n      errorMsg: ''\n    });\n  }\n\n  onChangePwd(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onLogin(event) {\n    event.preventDefault(); // Send an HTTP request to the server.\n    //   fetch(\"http://localhost:8081/signin?username=\"+this.state.username+\"&password=\"+this.state.password, {\n    //     method: 'GET', // The type of HTTP request.\n    //    }).then(function(response) {return response.json();alert(\"12321\")}).then(function(myJson) {\n    //   alert(myJson);\n    // })\n\n    var authorizd = false; // this.owners.map((value, index) => {\n    //   if (this.state.username === value.name && this.state.password === value.pwd) {                \n    //     authorizd = true;\n    //   }\n    // });\n    // alert(authorizd)\n    // if (authorizd){\n    //   this.props.history.push({\n    //     pathname : '/dashboard',\n    //     state :{\n    //       username:this.state.username\n    //     }\n    //   });\n    // }\n\n    fetch(\"http://localhost:8081/signin?username=\" + this.state.username + \"&password=\" + this.state.password, {\n      method: 'GET'\n    }) // The type of HTTP request.\n    .then(res => res.json()) // Convert the response data to a JSON.\n    .then(res => {\n      console.log(\"success\", res);\n\n      if (res.length > 0) {\n        alert(\"Valid account\");\n        this.props.history.push({\n          pathname: '/dashboard',\n          state: {\n            username: this.state.username\n          }\n        });\n      } else {\n        alert(\"Invalid account\");\n        this.setState({\n          username: \"\"\n        });\n        this.setState({\n          password: \"\"\n        });\n      }\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  onSignUp(event) {\n    alert(this.state.username + this.state.password);\n    fetch(\"http://localhost:8081/login?username=\" + this.state.username, {\n      method: 'GET'\n    }) // The type of HTTP request.\n    .then(res => res.json()) // Convert the response data to a JSON.\n    .then(res => {\n      console.log(\"success\", res);\n\n      if (res.length > 0) {\n        alert(\"Valid account\"); //addAccount(event);\n      } else {\n        alert(\"Account existed\");\n        this.setState({\n          username: \"\"\n        });\n        this.setState({\n          password: \"\"\n        });\n      }\n    }).catch(err => console.log(err)); // Print the error if there is one.\n    //   fetch(\"http://localhost:8081/signup?username=\"+this.state.username+\"&password=\"+this.state.password, {\n    //     method: 'POST', // The type of HTTP request.\n    //    }).then(function(response) {return response.json();alert(\"12321\")}).then(function(myJson) {\n    //   alert(myJson);\n    // })\n    // var authorizd = true;\n    // this.owners.map((value, index) => {\n    //   if (this.state.username === value.name) {                \n    //       authorizd = false;\n    //       alert(\"username already exists\");\n    //   }\n    // });\n    // if (authorizd ){\n    //     this.owners.push({ name: this.state.username, pwd: this.state.password })\n    // }\n  }\n\n  addAccount(event) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'React POST Request Example'\n      })\n    };\n    fetch(\"http://localhost:8081/addAccount?username=\" + this.state.username + \"&password=\" + this.state.password, {\n      method: 'POST'\n    }) // The type of HTTP request.\n    .then(res => res.json()) // Convert the response data to a JSON.\n    .catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SignIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"small-middle-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Username\",\n      value: this.state.username,\n      type: \"text\",\n      onChange: this.onChangeName,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 4\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Password\",\n      value: this.state.password,\n      type: \"password\",\n      className: \"form-control\",\n      id: \"exampleInputPassword1\",\n      onChange: this.onChangePwd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 4\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      onClick: this.onLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 4\n      }\n    }, \"  LogIn   \"), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      onClick: this.onSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 4\n      }\n    }, \"Sign Up\")))));\n  }\n\n}\n\nexport default withRouter(SignIn);","map":{"version":3,"sources":["/Users/miabb/Desktop/database/hw2/Archive/client/src/components/SignIn.js"],"names":["PageNavbar","React","withRouter","SignIn","Component","constructor","props","state","username","password","owners","name","pwd","eventsArr","map","ev","bind","onChangeName","e","setState","target","value","errorMsg","onChangePwd","onLogin","event","preventDefault","authorizd","fetch","method","then","res","json","console","log","length","alert","history","push","pathname","catch","err","onSignUp","addAccount","requestOptions","headers","body","JSON","stringify","title","render"],"mappings":"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","sourcesContent":["import PageNavbar from './PageNavbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport '../style/SignIn.css';\n\n\n\nclass SignIn extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {username: \"\",password:\"\"};\n    this.owners = [\n    { name: \"demo\", pwd: \"123456\" },\n    { name: \"oliver\",pwd: \"123456\"}]\n    const eventsArr = [\n\t\t    //按钮点击事件\n\t\t    \"onLogin\",\n\t\t    //user name输入改变\n\t\t    \"onChangeName\",\n\t\t    //password输入改变\n\t\t    \"onChangePwd\",\n        \"onSignUp\"\n        ];\n        //一次性绑定所有事件，这样以后添加的事件只要添加到eventArr数组里面就好了\n        eventsArr.map((ev) => {\n          this[ev] = this[ev].bind(this);\n          return \"\";\n        });\n\n      }\n\n      onChangeName(e) {\n        this.setState({ username: e.target.value });\n        this.setState({ errorMsg: '' });\n      }\n\n      onChangePwd(e) {\n        this.setState({ password: e.target.value });\n      }\n\n      onLogin(event) {\n        event.preventDefault();\n    // Send an HTTP request to the server.\n\n  //   fetch(\"http://localhost:8081/signin?username=\"+this.state.username+\"&password=\"+this.state.password, {\n  //     method: 'GET', // The type of HTTP request.\n  //    }).then(function(response) {return response.json();alert(\"12321\")}).then(function(myJson) {\n  //   alert(myJson);\n  // })\n\n\n\n   var authorizd = false;\n\n  // this.owners.map((value, index) => {\n  //   if (this.state.username === value.name && this.state.password === value.pwd) {                \n  //     authorizd = true;\n  //   }\n  // });\n  // alert(authorizd)\n  // if (authorizd){\n  //   this.props.history.push({\n  //     pathname : '/dashboard',\n  //     state :{\n  //       username:this.state.username\n  //     }\n  //   });\n  // }\n    fetch(\"http://localhost:8081/signin?username=\"+this.state.username+\"&password=\"+this.state.password, {\n       method: 'GET'}) // The type of HTTP request.\n\n       .then(res => res.json()) // Convert the response data to a JSON.\n       .then(res => {\n        console.log(\"success\", res);\n\n        if (res.length > 0) {\n          alert(\"Valid account\");\n          this.props.history.push({\n            pathname : '/dashboard',\n            state :{\n              username:this.state.username\n            }\n          });\n        }\n        \n      else {\n        alert(\"Invalid account\");\n        this.setState({username:\"\"});\n        this.setState({password:\"\"});\n        }\n       })\n       .catch(err => console.log(err)); // Print the error if there is one.\n\n\n       }\n\n\n     onSignUp(event){\n      alert(this.state.username+this.state.password);\n\n\n      fetch(\"http://localhost:8081/login?username=\"+this.state.username, {\n       method: 'GET'}) // The type of HTTP request.\n\n       .then(res => res.json()) // Convert the response data to a JSON.\n       .then(res => {\n        console.log(\"success\", res);\n\n        if (res.length > 0) {\n          alert(\"Valid account\");\n          //addAccount(event);\n        }\n        \n      else {\n        alert(\"Account existed\");\n        this.setState({username:\"\"});\n        this.setState({password:\"\"});\n        }\n       })\n       .catch(err => console.log(err)); // Print the error if there is one.\n  //   fetch(\"http://localhost:8081/signup?username=\"+this.state.username+\"&password=\"+this.state.password, {\n  //     method: 'POST', // The type of HTTP request.\n  //    }).then(function(response) {return response.json();alert(\"12321\")}).then(function(myJson) {\n  //   alert(myJson);\n  // })\n      // var authorizd = true;\n      // this.owners.map((value, index) => {\n      //   if (this.state.username === value.name) {                \n      //       authorizd = false;\n      //       alert(\"username already exists\");\n      //   }\n      // });\n      // if (authorizd ){\n      //     this.owners.push({ name: this.state.username, pwd: this.state.password })\n      // }\n  } \n\n  addAccount(event){\n        const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: 'React POST Request Example' })\n    };\n      fetch(\"http://localhost:8081/addAccount?username=\"+this.state.username+\"&password=\"+this.state.password, {\n       method: 'POST'}) // The type of HTTP request.\n\n       .then(res => res.json()) // Convert the response data to a JSON.\n       .catch(err => console.log(err)); // Print the error if there is one.\n  }\nrender() {\n  return (\n   <div className=\"SignIn\">\n\n   <PageNavbar active=\"signin\" />\n\n   <br></br>\n\n   <div className=\"small-middle-container\">\n\n<form>\n   <div className=\"form-group\">\n   <input placeholder=\"Username\" value= {this.state.username} type= \"text\" onChange={this.onChangeName} className=\"form-control\"/>\n   </div>\n\n   <div className=\"form-group\">\n   <input placeholder=\"Password\" value={this.state.password} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" \n   onChange={this.onChangePwd}/>\n   </div>\n\n<div className=\"btn-group\">                \n   <button className=\"btn btn-light\" onClick={this.onLogin}>  LogIn   </button>&nbsp;&nbsp;&nbsp;\n   <button className=\"btn btn-light\" onClick={this.onSignUp}>Sign Up</button>       \n </div>\n\n\n</form>\n   </div>\n\n   </div>  \n\n   );\n }\n}\nexport default withRouter(SignIn);\n\n"]},"metadata":{},"sourceType":"module"}