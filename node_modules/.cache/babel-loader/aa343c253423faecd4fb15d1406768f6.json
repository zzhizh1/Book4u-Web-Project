{"ast":null,"code":"var _jsxFileName = \"/Users/miabb/Desktop/database/hw2/Archive/client/src/components/Recommendations.js\";\nimport React from \"react\";\nimport \"../style/Recommendations.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PageNavbar from \"./PageNavbar\";\nimport StarIcon from \"../assets/images/star.png\";\nexport default class Recommendations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: []\n    }; // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n  }\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/recommendations\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(books => {\n      if (!books) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let bookDivs = books.map((element, i) => /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        className: \"genre\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GenreButton, {\n        id: \"button-\" + genreObj.genre,\n        onClick: () => this.showMovies(genreObj.genre),\n        genre: genreObj.genre,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }))); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        genres: genreDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Recommendation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"recommendation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list pr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-box opacity=0.4 bg-white px-3 pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"list-title mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"\\u2261 Recommendations\"), this.state.books.map((element, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-row pt-2\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-col cover-col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"cover\",\n        src: element.image_url_l,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-col content-col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }\n      }, element.title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-black-50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }\n      }, element.author)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-col rating-col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: StarIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 27\n        }\n      }, element.rating)));\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/miabb/Desktop/database/hw2/Archive/client/src/components/Recommendations.js"],"names":["React","PageNavbar","StarIcon","Recommendations","Component","constructor","props","state","books","componentDidMount","fetch","method","then","res","json","bookDivs","map","element","i","genreObj","genre","showMovies","setState","genres","genreDivs","catch","err","console","log","render","index","image_url_l","title","author","rating"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../style/Recommendations.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PageNavbar from \"./PageNavbar\";\nimport StarIcon from \"../assets/images/star.png\";\n\nexport default class Recommendations extends React.Component {\n  constructor(props) {\n    super(props);\nthis.state={\n\tbooks:[]\n}\n// The state maintained by this React Component. This component maintains the list of genres,\n// and a list of movies for a specified genre.\n}\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/recommendations\", {\n      method: 'GET' // The type of HTTP request.\n    })\n      .then(res => res.json()) // Convert the response data to a JSON.\n      .then(books => {\n        if (!books) return;\n        // Map each genreObj in genreList to an HTML element:\n        // A button which triggers the showMovies function for each genre.\n        let bookDivs = books.map((element, i) =>\n          <div key={i} className=\"genre\">\n\n          <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} /></div>\n        );\n\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\n        this.setState({\n          genres: genreDivs\n        })\n      })\n      .catch(err => console.log(err))\t// Print the error if there is one.\n  }\n\n\n\nrender() {    \nreturn(\n\t      <div className=\"Recommendation\">\n        <PageNavbar active=\"recommendation\" />\n   <br></br>\n\n                  <div className=\"list-wrap\">\n            <div className=\"list pr-1\">\n              <div className=\"list-box opacity=0.4 bg-white px-3 pt-3\">\n                <h5 className=\"list-title mb-3\">≡ Recommendations</h5>\n\n              \n                  {this.state.books.map((element, index) => {\n                    return (\n                      <div className=\"list-row pt-2\" key={index}>\n                        <div className=\"list-col cover-col\">\n                          < img className=\"cover\" src={element.image_url_l} />\n                        </div>\n                        <div className=\"list-col content-col\">\n                          <h5>{element.title}</h5>\n                          <p className=\"text-black-50\">{element.author}</p >\n                        </div>\n                        <div className=\"list-col rating-col\">\n                          < img src={StarIcon} />\n                          <h5>{element.rating}</h5>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div></div></div>\n);\n\n  }\n}"]},"metadata":{},"sourceType":"module"}