{"ast":null,"code":"var _jsxFileName = \"/Users/kejingwang/Desktop/CIS550Database/AllProjects/Project550New 2/client/src/components/Bookshelf.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport PageNavbar from './PageNavbar';\nimport '../style/Recommendations.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Bookshelf extends React.Component {\n  constructor(props) {\n    super(props); // State maintained by this React component is the selected movie name,\n    // and the list of recommended movies.\n\n    this.state = {\n      username: \"\",\n      books: []\n    }; // this.handleUserNameChange = this.handleUserNameChange.bind(this);\n    // this.submitName = this.submitName.bind(this);\n  }\n\n  handleUserNameChange(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n  /* ----  ---- */\n  // Hint: Name of movie submitted is contained in `this.state.movieName`.\n\n\n  componentDidMount() {\n    let storage = window.localStorage;\n    let username = storage.getItem(\"username\");\n    fetch(\"http://localhost:8081/bookshelf?username=\" + username, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(res => {\n      console.log(res); //   if (!bookList) return;\n      //   let book = bookList.map((obj, i) =>\n      //   <BookshelfBookRow title = {obj.title} author ={obj.author} />\n      // );\n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        books: res\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  } // Go to the book's subpage/info page\n\n\n  goToSubpage(ISBN) {\n    this.props.history.push({\n      pathname: '/subpage',\n      state: {\n        //ISBN: the ISBN of the book that user just clicked\n        ISBN: ISBN\n      }\n    });\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div className=\"Bookshelf\">\n      // \t<PageNavbar active=\"bookshelf\" />\n      //     <div className=\"container bookshelf-container\">\n      //     \t<div className=\"jumbotron\">\n      //     \t\t<div className=\"h5\">Bookshelf</div>\n      //     \t\t<br></br>\n      //     \t\t<div className=\"input-container\">\n      //     \t\t\t<input type='text' placeholder=\"Enter User Name\" value={this.state.username} onChange={this.handleUserNameChange} id=\"userName\" />\n      //     \t\t\t<button id=\"submitUserBtn\" className=\"submit-btn\" onClick={this.submitName}>Submit</button>\n      //     \t\t</div>\n      //     \t\t<div className=\"header-container\">\n      //     \t\t\t<div className=\"h6\"> This is your current bookshelf ...</div>\n      //     \t\t\t<div className=\"headers\">\n      //     \t\t\t\t<div className=\"header\"><strong>Title</strong></div>\n      //     \t\t\t\t<div className=\"header\"><strong>Author</strong></div>\n      //     \t\t\t</div>\n      //     \t\t</div>\n      //     \t\t<div className=\"results-container\" id=\"results\">\n      //     \t\t\t{this.state.books}\n      //     \t\t</div>\n      //     \t</div>\n      //     </div>\n      // </div>\n      React.createElement(\"div\", {\n        className: \"Bookshelf\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(PageNavbar, {\n        active: \"bookshelf\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 12\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list pr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-box px-3 pt-3\",\n        id: \"rec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"list-title mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"\\u2261 \", window.localStorage.getItem(\"username\"), \"'s current bookshelf \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row row-cols-1 row-cols-md-3\",\n        id: \"rec2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, this.state.books.map((element, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col mb-4\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card h-100\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"card-img-top\",\n          src: element.image_url_l,\n          onClick: () => this.goToSubpage(element.ISBN),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h7\", {\n          className: \"card-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 27\n          }\n        }, element.title), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"card-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 27\n          }\n        }, element.author))));\n      }))))))\n    ); // return(\n    // <div className=\"list-wrap\">\n    //     <div className=\"list pr-1\">\n    //       <div className=\"list-box bg-white px-3 pt-3\">\n    //         <h5 className=\"list-title mb-3\">â‰¡ Resulting Books</h5>\n    //           {this.state.books.map((element, index) => {\n    //             return (\n    //               <div className=\"list-row pt-2\" key={index}>\n    //                 <div className=\"list-col cover-col\">\n    //                   < img className=\"cover\" src={element.image_url_l} />\n    //                 </div>\n    //                 <div className=\"list-col content-col\">\n    //                   <h5>{element.title}</h5>\n    //                   <p className=\"text-black-50\">{element.author}</p >\n    //                 </div>\n    //                 <div className=\"list-col rating-col\">\n    //                 </div>\n    //               </div>\n    //             );\n    //           })}\n    //         </div>\n    //     </div>\n    // </div>\n    // );\n  }\n\n}\n\nexport default withRouter(Bookshelf);","map":{"version":3,"sources":["/Users/kejingwang/Desktop/CIS550Database/AllProjects/Project550New 2/client/src/components/Bookshelf.js"],"names":["React","withRouter","PageNavbar","Bookshelf","Component","constructor","props","state","username","books","handleUserNameChange","e","setState","target","value","componentDidMount","storage","window","localStorage","getItem","fetch","method","then","res","json","console","log","catch","err","goToSubpage","ISBN","history","push","pathname","render","map","element","index","image_url_l","title","author"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport PageNavbar from './PageNavbar';\nimport '../style/Recommendations.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Bookshelf extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// State maintained by this React component is the selected movie name,\n\t\t// and the list of recommended movies.\n\t\tthis.state = {\n\t\t\tusername: \"\",\n\t\t\tbooks: []\n\t\t}\n\n\t\t// this.handleUserNameChange = this.handleUserNameChange.bind(this);\n\t\t// this.submitName = this.submitName.bind(this);\n\t}\n\n\thandleUserNameChange(e) {\n\t\tthis.setState({\n\t\t\tusername: e.target.value\n\t\t});\n\t}\n\n\t/* ----  ---- */\n\t// Hint: Name of movie submitted is contained in `this.state.movieName`.\n\tcomponentDidMount() {\n\t\tlet storage = window.localStorage;\n        let username = storage.getItem(\"username\");\n\t\tfetch(\"http://localhost:8081/bookshelf?username=\"+username, {\n\t\t\tmethod: 'GET' // The type of HTTP request.\n\t\t  })\n\t\t\t.then(res => res.json()) // Convert the response data to a JSON.\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t//   if (!bookList) return;\n\t\t\t//   let book = bookList.map((obj, i) =>\n\t\t\t//   <BookshelfBookRow title = {obj.title} author ={obj.author} />\n\t\t\t// );\n\t\t  \n\t\t\t  // Set the state of the genres list to the value returned by the HTTP response from the server.\n\t\t\t  this.setState({\n\t\t\t\tbooks: res\n\t\t\t  })\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\t// Print the error if there is one.\n\t}\n\n    // Go to the book's subpage/info page\n\tgoToSubpage(ISBN) {\n\t\tthis.props.history.push({\n\t\t  pathname : '/subpage',\n\t\t  state :{\n\t\t\t//ISBN: the ISBN of the book that user just clicked\n\t\t\tISBN:ISBN\n\t\t  }\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t// <div className=\"Bookshelf\">\n\t\t\t// \t<PageNavbar active=\"bookshelf\" />\n\n\t\t\t//     <div className=\"container bookshelf-container\">\n\t\t\t//     \t<div className=\"jumbotron\">\n\t\t\t//     \t\t<div className=\"h5\">Bookshelf</div>\n\t\t\t//     \t\t<br></br>\n\t\t\t//     \t\t<div className=\"input-container\">\n\t\t\t//     \t\t\t<input type='text' placeholder=\"Enter User Name\" value={this.state.username} onChange={this.handleUserNameChange} id=\"userName\" />\n\t\t\t//     \t\t\t<button id=\"submitUserBtn\" className=\"submit-btn\" onClick={this.submitName}>Submit</button>\n\t\t\t//     \t\t</div>\n\t\t\t//     \t\t<div className=\"header-container\">\n\t\t\t//     \t\t\t<div className=\"h6\"> This is your current bookshelf ...</div>\n\t\t\t//     \t\t\t<div className=\"headers\">\n\t\t\t//     \t\t\t\t<div className=\"header\"><strong>Title</strong></div>\n\t\t\t//     \t\t\t\t<div className=\"header\"><strong>Author</strong></div>\n\t\t\t//     \t\t\t</div>\n\t\t\t//     \t\t</div>\n\t\t\t//     \t\t<div className=\"results-container\" id=\"results\">\n\t\t\t//     \t\t\t{this.state.books}\n\t\t\t//     \t\t</div>\n\t\t\t//     \t</div>\n\t\t\t//     </div>\n\t\t\t// </div>\n\t\t\t<div className=\"Bookshelf\">\n           <PageNavbar active=\"bookshelf\" />\n              <br></br>\n\n\n\n                <div className=\"list-wrap\">\n            <div className=\"list pr-1\">\n              <div className=\"list-box px-3 pt-3\"  id=\"rec\" >\n                <h5 className=\"list-title mb-3\">â‰¡ {window.localStorage.getItem(\"username\")}'s current bookshelf </h5>\n                <div className=\"row row-cols-1 row-cols-md-3\" id=\"rec2\">            \n                  {this.state.books.map((element, index) => {\n                    return (\n                  <div className=\"col mb-4\" key={index}>\n                      <div className=\"card h-100\">\n\n                          <img className=\"card-img-top\" src={element.image_url_l} onClick={()=>this.goToSubpage(element.ISBN)}/>\n\n                    <div className=\"card-body\">\n                          <h7 className=\"card-title\">{element.title}</h7>\n                          <p className=\"card-text\">{element.author}</p>\n                        </div></div></div>\n\n                    );\n                  })}\n                </div>\n              </div></div></div></div>\n        \n        );\n        // return(\n        // <div className=\"list-wrap\">\n        //     <div className=\"list pr-1\">\n        //       <div className=\"list-box bg-white px-3 pt-3\">\n        //         <h5 className=\"list-title mb-3\">â‰¡ Resulting Books</h5>\n\n              \n        //           {this.state.books.map((element, index) => {\n        //             return (\n        //               <div className=\"list-row pt-2\" key={index}>\n        //                 <div className=\"list-col cover-col\">\n        //                   < img className=\"cover\" src={element.image_url_l} />\n        //                 </div>\n        //                 <div className=\"list-col content-col\">\n        //                   <h5>{element.title}</h5>\n        //                   <p className=\"text-black-50\">{element.author}</p >\n        //                 </div>\n        //                 <div className=\"list-col rating-col\">\n        //                 </div>\n        //               </div>\n        //             );\n        //           })}\n        //         </div>\n        //     </div>\n        // </div>\n        // );\n\t}\n}\nexport default withRouter(Bookshelf);\n"]},"metadata":{},"sourceType":"module"}