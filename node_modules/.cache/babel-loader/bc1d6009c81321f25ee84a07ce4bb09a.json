{"ast":null,"code":"var _jsxFileName = \"/Users/miabb/Desktop/database/hw2/client/src/components/Recommendations.js\";\nimport PageNavbar from './PageNavbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../style/Recommendations.css';\n\nclass Recommendations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    const eventsArr = [//按钮点击事件\n    \"onSignIn\", //user name输入改变\n    \"onChangeName\", //password输入改变\n    \"onChangePwd\"]; //一次性绑定所有事件，这样以后添加的事件只要添加到eventArr数组里面就好了\n\n    eventsArr.map(ev => {\n      this[ev] = this[ev].bind(this);\n      return \"\";\n    });\n  }\n\n  onChangeName(e) {\n    this.setState({\n      username: e.target.value\n    });\n    this.setState({\n      errorMsg: ''\n    });\n  }\n\n  onChangePwd(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onSignIn(event) {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/signin/username=\" + this.state.username + \"&password=\" + this.state.password, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(ifexist => {\n      if (!ifexist) alert(\"Invalid account\");\n      alert(\"Invalid account\");\n      this.props.history.push({\n        pathname: '/dashboard',\n        state: {\n          username: this.state.username\n        }\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Recommendations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"recommendations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      class: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default withRouter(Recommendations);","map":{"version":3,"sources":["/Users/miabb/Desktop/database/hw2/client/src/components/Recommendations.js"],"names":["PageNavbar","React","Component","withRouter","Recommendations","constructor","props","state","username","password","eventsArr","map","ev","bind","onChangeName","e","setState","target","value","errorMsg","onChangePwd","onSignIn","event","fetch","method","then","res","json","ifexist","alert","history","push","pathname","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import PageNavbar from './PageNavbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport '../style/Recommendations.css';\n\n\n\nclass Recommendations extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {username: \"\",password:\"\"};\n\n\tconst eventsArr = [\n\t\t    //按钮点击事件\n\t\t    \"onSignIn\",\n\t\t    //user name输入改变\n\t\t    \"onChangeName\",\n\t\t    //password输入改变\n\t\t    \"onChangePwd\"\n\t\t];\n        //一次性绑定所有事件，这样以后添加的事件只要添加到eventArr数组里面就好了\n        eventsArr.map((ev) => {\n            this[ev] = this[ev].bind(this);\n            return \"\";\n        });\n\n  }\n\n\tonChangeName(e) {\n        this.setState({ username: e.target.value });\n        this.setState({ errorMsg: '' });\n    }\n \n    onChangePwd(e) {\n        this.setState({ password: e.target.value });\n    }\n\n  onSignIn(event) {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/signin/username=\"+this.state.username+\"&password=\"+this.state.password, {\n       method: 'GET' // The type of HTTP request.\n     })\n       .then(res => res.json()) // Convert the response data to a JSON.\n       .then(ifexist => {\n        if (!ifexist) alert(\"Invalid account\");\nalert(\"Invalid account\")\n   \t \tthis.props.history.push({\n                        pathname : '/dashboard',\n                        state :{\n                            username:this.state.username\n                        }\n                    });\n\n       })\n       .catch(err => console.log(err)) // Print the error if there is one.\n    }\n\n  render() {\n    return (\n    \t<div className=\"Recommendations\">\n\n        <PageNavbar active=\"recommendations\" />\n \n        <br></br>\n\n      <form onSubmit={this.onSignIn}>\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Email address</label>\n          <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n        </div>\n\n      </form></div>\n\n\n    );\n  }\n}\nexport default withRouter(Recommendations);\n\n"]},"metadata":{},"sourceType":"module"}